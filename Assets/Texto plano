effect {
	Name: "Damage",
	Params: {
		amount: Number
	}
	Action: (targets, context) => {
	  for target in targets {
	  	i = 0;
	  	while(i++ < amount)
	  		target.Power -= 1;
	};
    }
}

effect {
	Name: "Draw",
	Action: (targets, context) => {
		topCard = context.Deck.Pop();
		context.Hand.Add(topCard);
		context.Hand.Shuffle();
	}
}

effect {
	Name: "ReturnToDeck",
	Action: (targets, context) => {
	for target in targets {
		owner = target.Owner;
		deck = context.DeckOfPlayer;
		deck.Push(target);
		deck.Shuffle();
		context.Board.Remove(target);
		};
	}
}

card {
	Type: "Oro",
	Name: "Beluga",
	Faction: "Northern Realms",
	Power: if(name == "Beluga"){2+5=} else{3+2},
	Range: ["Melee", "Ranged"],
	OnActivation: [
		{
			Effect: {
				Name: "Damage",
				Amount: 5,
			}
			Selector: {
				Source: "board",
				Single: false,
				Predicate: (unit) => (3+5)/2 == 7
				  }
		}
		       ]
	}
#####################################################################			
			PostAction: {
				Type: "ReturnToDeck",
				Selector: {
					Source: "parent",
					Single: false,
					Predicate: (unit) => unit.Power < 1
					}
				}
			},
			Effect



if(name == "Beluga"){2+5} else{3+2},


card {Type: "Oro",Name: "Beluga",Faction: "Northern Realms",Power: 2,Range ["Melee","Ranged"],OnActivation: [ {Effect: {Name: "Damage",Amount: 5,}Selector: {Source: "board",Single: false,Predicate:(unit) => (3+5)/2 == 7}}]}
